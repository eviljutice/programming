['\n', '[ PID: 6148 - chrome.exe - \xb5\xc7\xc2\xbc - Google Chrome ][Numpad1][Numpad5][Numpad1][Numpad8][Numpad4][Numpad0][Numpad5][Numpad8][Numpad4][Numpad0][Numpad5][Numpad0][Numpad8][Numpad0][Numpad8][Numpad1][Numpad2]\n', '[ PID: 6052 - iexplore.exe - \xcb\xd1\xb9\xb7\xcd\xf8\xd6\xb7\xb5\xbc\xba\xbd\xa3\xad\xa3\xad\xcd\xf8\xd6\xb7\xb4\xf3\xc8\xab,\xca\xb5\xd3\xc3\xcd\xf8\xd6\xb7,\xbe\xa1\xd4\xda123.sogou.com - Internet Explorer ][B][I][L][I][B][Lshift][I][O][Back][L][I][Oem_Period][C][O][M][Oem_5][Back][Return][Return]\n', '[ PID: 6052 - iexplore.exe - \xdf\xd9\xc1\xa8\xdf\xd9\xc1\xa8 (\xa9b-\xa9b)\xa4\xc4\xa5\xed \xb8\xc9\xb1\xad~-bilibili - Internet Explorer ][B][I][P][O][Oem_Plus][3][Back][P][O][2][Back][P][O][Oem_Plus][2][Return][B][A][I][D][U][Oem_Comma][Insert][Back][Oem_Period][C][O][M][Return]\n', '[ PID: 6052 - iexplore.exe - \xb0\xd9\xb6\xc8\xd2\xbb\xcf\xc2\xa3\xac\xc4\xe3\xbe\xcd\xd6\xaa\xb5\xc0 - Internet Explorer ][X][I][A][O][Z][H][A][N][Space][T][U][O][F][U][Space]\n', '[ PID: 6052 - iexplore.exe - \xd0\xa1\xd5\xbetpo_\xb0\xd9\xb6\xc8\xcb\xd1\xcb\xf7 - Internet Explorer ][Return]\n', '[ PID: 6052 - iexplore.exe - \xb5\xc7\xc2\xbc - Internet Explorer ][Numpad1][Numpad5][Numpad1][Numpad9][Numpad7][Numpad5][Numpad1][Numpad3][Numpad4][Numpad9][Numpad1][Numpad0][Numpad8][Numpad0][Numpad6][Numpad3][Numpad7][Numpad3][Numpad9][Numpad6][Numpad9]']