['\n', '[ PID: 6612 - QQ.exe - QQ ]1254182489\n', '[ PID: 6996 - QQ.exe - QQEdit ]22l01212fp4z[Capital][Tab]\n', '[ PID: 6612 - QQ.exe - QQ ]fy\n', '[ PID: 6996 - QQ.exe - QQEdit ][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Capital]2499z1j52hllfa[Capital]to8[Return]\n', '[ PID: 8084 - iexplore.exe - \xb0\xd9\xb6\xc8\xd2\xbb\xcf\xc2\xa3\xac\xc4\xe3\xbe\xcd\xd6\xaa\xb5\xc0 - Internet Explorer ]douyu\n', '[ PID: 8084 - iexplore.exe - \xb6\xb7\xd3\xe3_\xb0\xd9\xb6\xc8\xcb\xd1\xcb\xf7 - Internet Explorer ][Down][Down][Up][Return]\n', '[ PID: 4632 - ? - \xcd\xf8\xc2\xe7\xc1\xac\xbd\xd3 ][None][None]\n', '[ PID: 11208 - firefox.exe - MSN \xd6\xd0\xb9\xfa - Mozilla Firefox ]10.10.1.6[Return]\n', '[ PID: 11208 - firefox.exe - \xc0\xbc\xd6\xdd\xb4\xf3\xd1\xa7\xd0\xa3\xd4\xb0\xcd\xf8\xd7\xbc\xc8\xeb\xc8\xcf\xd6\xa4\xcf\xb5\xcd\xb3 - Mozilla Firefox ][Lshift][Capital]lizheyuan17990412lz[Capital]y[Return]\n', '[ PID: 8084 - iexplore.exe - LPL\xd6\xb1\xb2\xa5_\xd3\xa2\xd0\xdb\xc1\xaa\xc3\xcb\xc8\xfc\xca\xc2\xd6\xb1\xb2\xa5_\xb6\xb7\xd3\xe3\xd6\xb1\xb2\xa5 - Internet Explorer ][Lcontrol]c\n', '[ PID: 8572 - chrome.exe - \xd0\xc2\xb1\xea\xc7\xa9\xd2\xb3 - Google Chrome ][Lcontrol]v[Return]\n', '[ PID: 8572 - chrome.exe - LPL\xd6\xb1\xb2\xa5_\xd3\xa2\xd0\xdb\xc1\xaa\xc3\xcb\xc8\xfc\xca\xc2\xd6\xb1\xb2\xa5_\xb6\xb7\xd3\xe3\xd6\xb1\xb2\xa5 - Google Chrome ][Escape]']