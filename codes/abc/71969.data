['\n', '[ PID: 8564 - \x8d\xe1 - \xb0\xd9\xb6\xc8\xd2\xbb\xcf\xc2\xa3\xac\xc4\xe3\xbe\xcd\xd6\xaa\xb5\xc0 - Internet Explorer ]l:lkk[Back][Back]lanhouau[Space]+++[Back][Back][Back][Back][Back][Back]ln[Back][Back]lxb[Back][Back]zhoudauy[Back][Back]xue[Space]\n', '[ PID: 8564 - \x8d\xe1 - \xc0\xbc\xd6\xdd\xb4\xf3\xd1\xa7_\xb0\xd9\xb6\xc8\xcb\xd1\xcb\xf7 - Internet Explorer ]youxin[Back]ang[Space]\n', '[ PID: 8564 - \x8d\xe1 - \xc0\xbc\xd6\xdd\xb4\xf3\xd1\xa7\xd3\xca\xcf\xe4_\xb0\xd9\xb6\xc8\xcb\xd1\xcb\xf7 - Internet Explorer ][Return]\n', '[ PID: 8564 - \x8d\xe1 - Coremail\xd3\xca\xbc\xfe\xcf\xb5\xcd\xb3 - Internet Explorer ]lion[Back][Back]n[Lshift]xb!%linxiangbin!)#[Return]\n', '[ PID: 4144 - \x8d\xe1 - lxb (G:) ][Right][Back][Back][Back][Back][Back]\n', '[ PID: 4144 - \x8d\xe1 - final exam of ][Right][Right][Back][Back][Back][Back][Back][Back][Back][Back][Back]\n', '[ PID: 3772 - \x8d\xe1 - QQ ][Numpad1][Numpad0][Numpad3][Numpad5][Numpad2][Numpad8][Numpad8][Numpad8][Numpad0][Left][Left][Left][Left][Left][Left][Numpad7]\n', '[ PID: 6828 - \x8d\xe1 - QQEdit ]m^pntlxpingh*[Back][Back][Back]v[Back][Back][Back]nb)bzlf^v@b\n', '[ PID: 6828 - \x8d\xe1 - \xd3\xe0\xc9\xfa\xb6\xbc\xca\xc7\xc4\xe3\xb0\xa1\xa3\xa1 ]woye[Space]qile[Space][Return]h[Back]zhzai[Space]chuli[Space]shuju[Space]ne[Space]"[Left]"[Right][Back][Back][Return]nikuaiqu[Space]xishu[Space]ba[Space][Return]\n', '[ PID: 9204 - \x8d\xe1 - \xb2\xe9\xd5\xd2 ]a[Lshift]lpha[Space]occ[Rshift][Return]\n', '[ PID: 9204 - \x8d\xe1 - \xd0\xb4\xd7\xd6\xb0\xe5 ][Return]\n', '[ PID: 9204 - \x8d\xe1 - \xb2\xe9\xd5\xd2 ][Return]\n', '[ PID: 9204 - \x8d\xe1 - \xd0\xb4\xd7\xd6\xb0\xe5 ][Return]\n', '[ PID: 9204 - \x8d\xe1 - \xb2\xe9\xd5\xd2 ][Back][Back][Back][Back][Return][Return][Return][Return]\n', '[ PID: 9204 - \x8d\xe1 - \xd0\xb4\xd7\xd6\xb0\xe5 ][Return]\n', '[ PID: 9204 - \x8d\xe1 - \xb2\xe9\xd5\xd2 ][Return][Return][Return]\n', '[ PID: 9204 - \x8d\xe1 - \xd0\xb4\xd7\xd6\xb0\xe5 ][Return]\n', '[ PID: 4312 - \x8d\xe1 - G1:M1 - MOs ][Lcontrol][Lmenu]a[Lcontrol][Lmenu]a\n', '[ PID: 6828 - \x8d\xe1 - \xc1\xed\xb4\xe6\xce\xaa ]jai[Back][Back]ic[Back]chun[Lshift]e[Back]_homo_lumoe+[Back][Back]_energy\n', '[ PID: 4312 - \x8d\xe1 - G2:M1 - MOs ][Lcontrol][Lmenu]a\n', '[ PID: 6828 - \x8d\xe1 - \xc1\xed\xb4\xe6\xce\xaa ]e[Capital][Back]rea+[Back][Back][Back][Back][Lshift][Capital]reagent[Lshift][Capital]h_f[Back]s_homo_lumo_energy\n', '[ PID: 4312 - \x8d\xe1 - G1:M1 - MOs ][Lcontrol][Lmenu]a\n', '[ PID: 6828 - \x8d\xe1 - \xc1\xed\xb4\xe6\xce\xaa ][Back]f\n', '[ PID: 4312 - \x8d\xe1 - G1:M1 - MOs ][Lcontrol][Lmenu]a\n', '[ PID: 6828 - \x8d\xe1 - \xc1\xed\xb4\xe6\xce\xaa ][Back]cl\n', '[ PID: 4312 - \x8d\xe1 - G1:M1 - MOs ][Lcontrol][Lmenu]a\n', '[ PID: 6828 - \x8d\xe1 - \xc1\xed\xb4\xe6\xce\xaa ][Back]br\n', '[ PID: 8348 - firefox.exe - hao123_\xc9\xcf\xcd\xf8\xb4\xd3\xd5\xe2\xc0\xef\xbf\xaa\xca\xbc - Mozilla Firefox ][Rshift]KLR[Back][Back][Back]SKLEARN[Return]\n', '[ PID: 8348 - firefox.exe - sklearn_\xb0\xd9\xb6\xc8\xcb\xd1\xcb\xf7 - Mozilla Firefox ]GITHUB[Return]\n', '[ PID: 8348 - firefox.exe - The world\xa1\xafs leading software development platform \xa1\xa4 GitHub - Mozilla Firefox ]GOTWARPREDICTOR[Return]\n', '[ PID: 8348 - firefox.exe - Search \xa1\xa4 gotwarpredictor \xa1\xa4 GitHub - Mozilla Firefox ][Return]S[Return]\n', '[ PID: 8348 - \xdb\xc2 - 4.9. Transforming the prediction target (y) \xa1\xaa scikit-learn 0.20.2 documentation - Mozilla Firefox ]PRPO[Back][Back]PRO[Back][Back][Back]ER[Back]PROCESION[Back][Back]NG>[Lcontrol]V[Rshift]()[Return]\n', '[ PID: 8348 - \xdb\xc2 - github_\xb0\xd9\xb6\xc8\xcb\xd1\xcb\xf7 - Mozilla Firefox ][Rshift]ROW[Rshift][Return]\n', '[ PID: 8348 - \xdb\xc2 - row_\xb0\xd9\xb6\xc8\xcb\xd1\xcb\xf7 - Mozilla Firefox ][Space]PYTHON[Return]\n', '[ PID: 7720 - ? - hao123_\xc9\xcf\xcd\xf8\xb4\xd3\xd5\xe2\xc0\xef\xbf\xaa\xca\xbc - Mozilla Firefox ][N][Z][H][O][U][D][A][X][U][E][Space][C][U][I][N][Y][I][N][G][C][Back][X][U][E][Y][U][A][N][Space][Left][Back][C][U][I]']