['\n', '[ PID: 3964 - iexplore.exe - \xb0\xd9\xb6\xc8\xd2\xbb\xcf\xc2\xa3\xac\xc4\xe3\xbe\xcd\xd6\xaa\xb5\xc0 - Internet Explorer ][Back]http[Return][Lshift]:??[Back][Back][Back][Lshift]:??twy[Back]y[Back]sys>lzu>edu>cn?lzutwt[Back]stu?[Return]\n', '[ PID: 3964 - iexplore.exe - \xc0\xbc\xd6\xdd\xb4\xf3\xd1\xa7\xcd\xc5\xce\xaf\xd7\xdb\xba\xcf\xd2\xb5\xce\xf1\xb9\xdc\xc0\xed\xcf\xb5\xcd\xb3 - Internet Explorer ]zhu[Back][Back][Back][Lshift]zhuzhch!^zhu)[Back]($)^)!\n', '[ PID: 7652 - ? - \xb0\xd9\xb6\xc8\xd2\xbb\xcf\xc2\xa3\xac\xc4\xe3\xbe\xcd\xd6\xaa\xb5\xc0 - Internet Explorer ]qq[Return]\n', '[ PID: 7652 - ? - \xb5\xc7\xc2\xbcQQ\xd3\xca\xcf\xe4 - Internet Explorer ]@&@@&@%#)%$$#[Lshift]@zzc!@#$%^[Capital]zzc\n', '[ PID: 7652 - ? - \xb0\xd9\xb6\xc8\xd2\xbb\xcf\xc2\xa3\xac\xc4\xe3\xbe\xcd\xd6\xaa\xb5\xc0 - Internet Explorer ]wps\n', '[ PID: 7924 - ? - hao123_\xc9\xcf\xcd\xf8\xb4\xd3\xd5\xe2\xc0\xef\xbf\xaa\xca\xbc - Google Chrome ]wps[Return]\n', '[ PID: 7652 - ? - \xb0\xd9\xb6\xc8\xd2\xbb\xcf\xc2\xa3\xac\xc4\xe3\xbe\xcd\xd6\xaa\xb5\xc0 - Internet Explorer ]htt[Back][Back][Back][Capital]http[Return][Lshift]:??[Back][Back][Lshift]??[Back][Back][Lshift]??twsys>lzu>edu>cn?lzutwtu?[Return][Back][Lshift]:[Return][Return]\n', '[ PID: 7652 - ? - HTTP 404 \xce\xb4\xd5\xd2\xb5\xbd - Internet Explorer ]s[Return]\n', '[ PID: 7652 - ? - \xc0\xbc\xd6\xdd\xb4\xf3\xd1\xa7\xcd\xc5\xce\xaf\xd7\xdb\xba\xcf\xd2\xb5\xce\xf1\xb9\xdc\xc0\xed\xcf\xb5\xcd\xb3 - Internet Explorer ]zhu[Back][Back][Back][Lshift]zhuzhch!^zhu($)^[Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back]zhuzhch!^zhu($)^_[Back])!zhu($_[Back])^)![Return]\n', '[ PID: 7652 - ? - \xb0\xd9\xb6\xc8\xd2\xbb\xcf\xc2\xa3\xac\xc4\xe3\xbe\xcd\xd6\xaa\xb5\xc0 - Internet Explorer ]qq[Return]\n', '[ PID: 7652 - ? - \xc0\xbc\xd6\xdd\xb4\xf3\xd1\xa7\xcd\xc5\xce\xaf\xd7\xdb\xba\xcf\xd2\xb5\xce\xf1\xb9\xdc\xc0\xed\xcf\xb5\xcd\xb3 - Internet Explorer ][Lshift]juyoufeixianxing[Space]jiechulv[Space]de[Space][Capital]ir[Capital][Back][Back][Capital]sir[Capital]chuanan[Back][Back]ranbing[Space]moxing[Space]e[Back]de[Space]dingxing[Space]feni[Space][Back][Back][Back][Back][Back]fenxi[Space]$@)!)$!((&)^)@))!@!*^[Back][Back][Back]!*^)&!$!^^(^@!&^@!&(&*@!))))!)$$^)zhuzhicheng[Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back]zhuzhicheng[Space]liwanton[Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Space][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right]g[Right][Right][Right][Right][Right][Right][Space][Right][Space]!#[Back][Back]!#^)(#^#^#&[Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Space][Space]#@)!^)($)^)!zhuzhicheng[Space]$@)!)$!((&)^)@))!@@)!^!*^)&!$!^^(']