['\n', '[ PID: 6632 - ? - QQ ]W[Back][Lshift]MWMY[Return]\n', '[ PID: 3884 - firefox.exe - Mozilla Firefox ][Tab]\n', '[ PID: 7824 - WINWORD.EXE - \xdd\xcd\xd3\xa2\xd1\xa7\xd4\xba\xd1\xa7\xc9\xfa\xbb\xe1\xb1\xa8\xc3\xfb\xb1\xed.doc [\xbc\xe6\xc8\xdd\xc4\xa3\xca\xbd] - Word(\xb2\xfa\xc6\xb7\xbc\xa4\xbb\xee\xca\xa7\xb0\xdc) ]RESH[Back][Back]NSHI!E[Back]GENGDUODE!XIAOHUOBANMEN!<KAIKUOZIJIDEYAJIAN#$[Back][Back][Back][Back][Back][Back]NJIAN@[Back][Back][Back][Back]TUANYUAN!\n', '[ PID: 1084 - QQ.exe - QQ ][Numpad1][Numpad2][Numpad5][Numpad4][Numpad1][Numpad8][Numpad2][Numpad4][Numpad8][Numpad9]\n', '[ PID: 7256 - QQ.exe - QQEdit ][Numpad9][Numpad9][Numpad0][Numpad4][Numpad1][Numpad2]LZ[Capital]Y[Return]\n', '[ PID: 7256 - QQ.exe - \xd1\xa7\xca\xf5 ][Lcontrol]C\n', '[ PID: 4436 - Explorer.EXE - Program Manager ]LZY++[Back][Back][Back][Capital][Back][Back]LZY++[Back][Back]IZHEYUAN@[Back]YUAN@[Return]\n', '[ PID: 7104 - \x9b\xcb - QQ\xd3\xca\xcf\xe4 - \xd0\xb4\xd0\xc5 - Mozilla Firefox ][Lcontrol]V[Lcontrol]SSHE[Back][Back][Back]HENQINSHU$\n', '[ PID: 7256 - \x9b\xcb - \xbb\xaf\xd1\xa7\xb0\xcb\xb0\xe0\xce\xe2\xc4\xfe\xc8\xbb ]EE[Back]N!HD![Return]\n', '[ PID: 9312 - ? - \xb0\xd9\xb6\xc8\xd2\xbb\xcf\xc2\xa3\xac\xc4\xe3\xbe\xcd\xd6\xaa\xb5\xc0 - Internet Explorer ]ouxiang\n', '[ PID: 9312 - iexplore.exe - 12366_\xb0\xd9\xb6\xc8\xcb\xd1\xcb\xf7 - Internet Explorer ][Back][Back][Back][Back][Back][Back]\n', '[ PID: 9312 - iexplore.exe - 126\xd0\xc5\xcf\xe4_\xb0\xd9\xb6\xc8\xcb\xd1\xcb\xf7 - Internet Explorer ]lzucuiyig[Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back][Back]lzu[Return]cuiying[Return]lzdxcyxy\n', '[ PID: 4816 - WINWORD.EXE - \xdd\xcd\xd3\xa2\xd1\xa7\xd4\xba\xd1\xa7\xc9\xfa\xbb\xe1\xb1\xa8\xc3\xfb\xb1\xed.doc\xdd\xcd\xd3\xa2\xd1\xa7\xd4\xba\xd1\xa7\xc9\xfa\xbb\xe1\xb1\xa8\xc3\xfb\xb1\xed.doc [\xbc\xe6\xc8\xdd\xc4\xa3\xca\xbd] - Word(\xb2\xfa\xc6\xb7\xbc\xa4\xbb\xee\xca\xa7\xb0\xdc) ][Back]\n', '[ PID: 4816 - WINWORD.EXE - \xb7\xa2\xb2\xbc\xce\xaa PDF \xbb\xf2 XPS ]zhiyuan[Right][Space][Space]renwen[Space][Space][Lcontrol]vzhiyuan[Space][Space]huaxue[Space][Space][Lcontrol]v[Return]\n', '[ PID: 8136 - WINWORD.EXE -  ][Lcontrol]c\n', '[ PID: 8136 - WINWORD.EXE - \xb7\xa2\xb2\xbc\xce\xaa PDF \xbb\xf2 XPS ]zhiyuan[Space]shegwu[Space][Space][Left][Left][Left][Space][Right][Right][Right][Space][Lcontrol]v[Back][Back][Back][Back]luoyu[Right][Right][Right][Left][Space]i[Back]jie[Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Space]\n', '[ PID: 8136 - WINWORD.EXE - \xdd\xcd\xd3\xa2\xd1\xa7\xd4\xba\xd1\xa7\xc9\xfa\xbb\xe1\xb1\xa8\xc3\xfb\xb1\xed.docx - Word(\xb2\xfa\xc6\xb7\xbc\xa4\xbb\xee\xca\xa7\xb0\xdc) ][Back][Back][Back]\n', '[ PID: 8788 - WINWORD.EXE - \xb7\xa2\xb2\xbc\xce\xaa PDF \xbb\xf2 XPS ]cuiyi[Back][Back][Back][Back][Back][Back]zhiyuan[Space][Space]shenwguu[Back][Back][Back][Back][Back]ngwu[Space][Space]yang[Right][Right][Space]liang[Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Right][Space]\n', '[ PID: 5160 - \x86\xc1 - KINGSTON (G:) ]shengqi[Space]n[Back][Back][Back]shengqi[Space]n[Back][Back][Back]shenqi[Back][Back]gqi[Back][Back][Back]qingbiao[Space]\n', '[ PID: 3268 - \x86\xc1 - hao123_\xc9\xcf\xcd\xf8\xb4\xd3\xd5\xe2\xc0\xef\xbf\xaa\xca\xbc - Google Chrome ]xx[Back][Return]l[Back][Back]\n', '[ PID: 10892 - ? - \xb0\xd9\xb6\xc8\xd2\xbb\xcf\xc2\xa3\xac\xc4\xe3\xbe\xcd\xd6\xaa\xb5\xc0 - Internet Explorer ][B][E][I][J][Space][D][A][X][Space]\n', '[ PID: 10892 - iexplore.exe - \xb1\xb1\xbe\xa9\xb4\xf3\xd1\xa7_\xb0\xd9\xb6\xc8\xcb\xd1\xcb\xf7 - Internet Explorer ][Return]\n', '[ PID: 11160 - iexplore.exe - \xb0\xd9\xb6\xc8\xd2\xbb\xcf\xc2\xa3\xac\xc4\xe3\xbe\xcd\xd6\xaa\xb5\xc0 - Internet Explorer ][B][E][I][J][Space][D][A][X][Space]\n', '[ PID: 2380 - QQ.exe - \xd7\xaa\xb7\xa2 ]UU[Back][Back]MOU!MOU!\n', '[ PID: 7792 - iexplore.exe - \xb0\xd9\xb6\xc8\xd2\xbb\xcf\xc2\xa3\xac\xc4\xe3\xbe\xcd\xd6\xaa\xb5\xc0 - Internet Explorer ]t[Back]bili\n', '[ PID: 7792 - ? - OVERLORD \xa2\xf3\xa3\xba\xb5\xda9\xbb\xb0_\xb7\xac\xbe\xe7_bilibili_\xdf\xd9\xc1\xa8\xdf\xd9\xc1\xa8 - Internet Explorer ][Escape][Space][Space]\n', '[ PID: 7792 - \x86\xb8 - \xdf\xd9\xc1\xa8\xdf\xd9\xc1\xa8 (\xa9b-\xa9b)\xa4\xc4\xa5\xed \xb8\xc9\xb1\xad~-bilibili - Internet Explorer ]ted[Return][Return]\n', '[ PID: 7792 - \x86\xb8 - TED Recommends - Internet Explorer ]hengqi[Return][Left][Left][Left][Left][Left][Left][Left][Left]s[Return]chen[Return]515787564[Lshift][Lshift][Lshift]2qq,.[Back][Back][Back][Back]qq..[Lcontrol][Lshift][Space]qq.[Back][Back][Lcontrol][Space]qq.com9090950[Return]\n', "[ PID: 7792 - \x86\xb8 - Christian Picciolini: My descent into America's neo-Nazi movement -- and how I got out | TED Ta - Internet Explorer ][Escape]\n", '[ PID: 7792 - \x86\xb8 - \xd0\xc2\xb1\xea\xc7\xa9\xd2\xb3 - Internet Explorer ]youtub[Space][Return]\n', "[ PID: 7792 - \x86\xb8 - Christian Picciolini: My descent into America's neo-Nazi movement -- and how I got out | TED Ta - Internet Explorer ][Escape]\n", "[ PID: 7792 - \x86\xb8 - The page you were looking for doesn't exist \xa8C TED - Internet Explorer ]baicizhan[Space][Return]\n", '[ PID: 7792 - \x86\xb8 - \xb1\xb3\xb5\xa5\xb4\xca\xd7\xee\xba\xc3\xb5\xc4\xc8\xed\xbc\xfe\xc5\xc5\xc3\xfb_\xb0\xd9\xb6\xc8\xcb\xd1\xcb\xf7 - Internet Explorer ]bil\n', '[ PID: 7792 - \x86\xb8 - \xce\xde\xb7\xa8\xcf\xd4\xca\xbe\xb4\xcb\xd2\xb3 - Internet Explorer ]b\n', '[ PID: 7792 - \x86\xb8 - \xb5\xe7\xd3\xb0 - \xdf\xd9\xc1\xa8\xdf\xd9\xc1\xa8 (\xa9b-\xa9b)\xa4\xc4\xa5\xed \xb8\xc9\xb1\xad~-bilibili - Internet Explorer ]kanbujian[Space]de[Space]ty[Back][Back][Back]yingwen[Space]zimu[Space][Back][Back]zimu2[Return]\n', '[ PID: 7792 - \x86\xb8 - [\xd3\xa2\xce\xc4\xd7\xd6\xc4\xbb]\xce\xde\xbd\xda\xb2\xd9\xce\xde\xcf\xc2\xcf\xde\xce\xd2\xd6\xbb\xb7\xfe\xd5\xe2\xb8\xf6\xbd\xda\xc4\xbf_\xdf\xd9\xc1\xa8\xdf\xd9\xc1\xa8 (\xa9b-\xa9b)\xa4\xc4\xa5\xed \xb8\xc9\xb1\xad~-bilibili - Internet Explorer ][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Up][Space][Space][Escape]\n', '[ PID: 7792 - \x86\xb8 - \xa1\xbe\xd3\xa2\xce\xc4\xd7\xd6\xc4\xbb\xa1\xbf\xa1\xbeJusuf\xa1\xbf\xc8\xf0\xca\xbf\xd0\xa1\xbd\xe3\xbd\xe3\xb8\xdf\xd0\xa7\xc2\xca\xb5\xc4\xd2\xbb\xcc\xec\xa3\xa1\xc0\xb4\xd1\xa7\xd1\xa7\xcb\xfd\xb8\xdf\xd0\xa7\xc2\xca\xb5\xc4\xb7\xbd\xb7\xa8\xb0\xc9\xa3\xa1Study with me_\xdf\xd9\xc1\xa8\xdf\xd9\xc1\xa8 (\xa9b-\xa9b)\xa4\xc4\xa5\xed \xb8\xc9\xb1\xad~-bilibili - Internet Explorer ][Escape]\n', '[ PID: 7792 - iexplore.exe - \xb0\xd9\xb6\xc8\xd2\xbb\xcf\xc2\xa3\xac\xc4\xe3\xbe\xcd\xd6\xaa\xb5\xc0 - Internet Explorer ]A[Back]WAYIYU[Space][Back][Back][Back][Back]WANGYIYUN[Space][Return]\n', '[ PID: 7792 - iexplore.exe - \xcd\xf8\xd2\xd7\xd4\xc6_\xb0\xd9\xb6\xc8\xcb\xd1\xcb\xf7 - Internet Explorer ][Return]\n', '[ PID: 7792 - iexplore.exe - \xb2\xbb\xc8\xbe (\xb8\xd6\xc7\xd9\xb0\xe6) - \xc8\xf8\xb6\xa5\xb6\xa5 - \xb5\xa5\xc7\xfa - \xcd\xf8\xd2\xd7\xd4\xc6\xd2\xf4\xc0\xd6 - Internet Explorer ]YUZHI[Back][Back][Back][Back][Back]YUZHIHAOER[Space][Return]']