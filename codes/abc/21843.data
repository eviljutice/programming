['\n', '[ PID: 6324 - QQ.exe - QQ ][Numpad8][Numpad3][Numpad5][Numpad2][Numpad5][Numpad5][Numpad5][Numpad9][Numpad0][Back][Numpad2][Return]\n', '[ PID: 6444 - QQ.exe - QQEdit ]A)FZQIKZLY**[Numpad0][Numpad5]N[Return]\n', '[ PID: 6324 - QQ.exe - QQ ][Return]\n', '[ PID: 11068 - firefox.exe - \xbf\xec\xcb\xd1 - \xcb\xd1\xcb\xf7\xbf\xec\xc8\xcb\xd2\xbb\xb2\xbd - Google - Mozilla Firefox ]CUIMEIGONGYUAN[Space]DIERJI[Space][Return]\n', '[ PID: 6444 - \x86\xb8 - QQ ][F7]\n', '[ PID: 792 - \x86\xb8 - Program Manager ][Lwin]\n', '[ PID: 4364 - \x86\xb8 - Cortana (\xd0\xa1\xc4\xc8) ]U[Back]UU\n', '[ PID: 9000 - ORIGIN~1.EXE - OriginPro 9 64-bit - C:\\Users\\Administrator\\Documents\\OriginLab\\90\\User Files\\UNTITLED * - /Folder1/ - [Book2] ][Capital][I][Capital][Capital][V][V][V][V][V][Delete]']